/* tslint:disable */
/* eslint-disable */
/**
 * Symbolic Boilerplate
 * An API spec for managing todo lists
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@simonball.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LoginPost401Response,
  TodosGet200Response,
  TodosTodoIdGet200Response,
} from '../models';
import {
    LoginPost401ResponseFromJSON,
    LoginPost401ResponseToJSON,
    TodosGet200ResponseFromJSON,
    TodosGet200ResponseToJSON,
    TodosTodoIdGet200ResponseFromJSON,
    TodosTodoIdGet200ResponseToJSON,
} from '../models';

export interface TodosTodoIdGetRequest {
    todoId: number;
}

/**
 * 
 */
export class TodoApi extends runtime.BaseAPI {

    /**
     * Get a listing of todo in system
     */
    async todosGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodosGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("tokenAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/todos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodosGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get a listing of todo in system
     */
    async todosGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodosGet200Response> {
        const response = await this.todosGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get detailed information about a particular todo
     */
    async todosTodoIdGetRaw(requestParameters: TodosTodoIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodosTodoIdGet200Response>> {
        if (requestParameters.todoId === null || requestParameters.todoId === undefined) {
            throw new runtime.RequiredError('todoId','Required parameter requestParameters.todoId was null or undefined when calling todosTodoIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("tokenAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/todos/{TodoId}`.replace(`{${"TodoId"}}`, encodeURIComponent(String(requestParameters.todoId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodosTodoIdGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get detailed information about a particular todo
     */
    async todosTodoIdGet(requestParameters: TodosTodoIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodosTodoIdGet200Response> {
        const response = await this.todosTodoIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
