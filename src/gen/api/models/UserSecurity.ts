/* tslint:disable */
/* eslint-disable */
/**
 * Symbolic Boilerplate
 * An API spec for managing posts
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@simonball.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSecurity
 */
export interface UserSecurity {
    /**
     * Response code from auth
     * @type {number}
     * @memberof UserSecurity
     */
    code: number;
    /**
     * DateTime value for when auth token expires
     * @type {string}
     * @memberof UserSecurity
     */
    expire: string;
    /**
     * The actual auth token
     * @type {string}
     * @memberof UserSecurity
     */
    token: string;
}

/**
 * Check if a given object implements the UserSecurity interface.
 */
export function instanceOfUserSecurity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "expire" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function UserSecurityFromJSON(json: any): UserSecurity {
    return UserSecurityFromJSONTyped(json, false);
}

export function UserSecurityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSecurity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'expire': json['expire'],
        'token': json['token'],
    };
}

export function UserSecurityToJSON(value?: UserSecurity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'expire': value.expire,
        'token': value.token,
    };
}

