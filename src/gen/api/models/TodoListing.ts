/* tslint:disable */
/* eslint-disable */
/**
 * Symbolic Boilerplate
 * An API spec for managing todo lists
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@simonball.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TodoListing
 */
export interface TodoListing {
    /**
     * 
     * @type {number}
     * @memberof TodoListing
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof TodoListing
     */
    title: string;
    /**
     * 
     * @type {boolean}
     * @memberof TodoListing
     */
    complete: boolean;
}

/**
 * Check if a given object implements the TodoListing interface.
 */
export function instanceOfTodoListing(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "complete" in value;

    return isInstance;
}

export function TodoListingFromJSON(json: any): TodoListing {
    return TodoListingFromJSONTyped(json, false);
}

export function TodoListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): TodoListing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'complete': json['complete'],
    };
}

export function TodoListingToJSON(value?: TodoListing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'complete': value.complete,
    };
}

