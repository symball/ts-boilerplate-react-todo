/* tslint:disable */
/* eslint-disable */
/**
 * Symbolic Boilerplate
 * An API spec for managing todo lists
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@simonball.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TodoUpdate
 */
export interface TodoUpdate {
    /**
     * 
     * @type {string}
     * @memberof TodoUpdate
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof TodoUpdate
     */
    summary?: string;
    /**
     * 
     * @type {string}
     * @memberof TodoUpdate
     */
    content?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TodoUpdate
     */
    complete?: boolean;
}

/**
 * Check if a given object implements the TodoUpdate interface.
 */
export function instanceOfTodoUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TodoUpdateFromJSON(json: any): TodoUpdate {
    return TodoUpdateFromJSONTyped(json, false);
}

export function TodoUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TodoUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'summary': !exists(json, 'summary') ? undefined : json['summary'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
    };
}

export function TodoUpdateToJSON(value?: TodoUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'summary': value.summary,
        'content': value.content,
        'complete': value.complete,
    };
}

